1. Criação de dicionários:
   - Um dicionário é uma estrutura de dados que armazena informações em pares de chave e valor. Definido por "{}".
Ex.:
    pessoa = {"nome": "Ana", "idade": 25}

2. Acessando valores:
   - É possível acessar um valor usando sua chave:
Ex.:
    print(pessoa["nome"])  # Mostra "Ana"

3. Adicionando novos dados:
   - Basta definir uma nova chave com um valor.
Ex.:
   pessoa["cidade"] = "São Paulo"

4. Alterando dados existentes:
   - Reatribui um novo valor à chave desejada.
Ex.:
    pessoa["idade"] = 26

5. Removendo dados:
   - Utiliza-se o "del" para apagar uma chave do dicionário.
Ex.:
    del pessoa["cidade"]

6. Visualizando dados:
   - pessoa.keys() → retorna todas as chaves.
   - pessoa.values() → retorna todos os valores.
   - pessoa.items() → retorna pares (chave, valor).

7. Usando "for" com dicionários:
   - Um "for" com ".items()" permite acessar chave e valor ao mesmo tempo:
     for chave, valor in dicionario.items():

5. Lista de Dicionários:
   - Aprendi a criar listas que armazenam vários dicionários.

   - Isso é útil, por exemplo, para registrar pessoas com dados como nome, idade e cidade.
   - Ex.:
     grupo = []
     pessoa = {"nome": "João", "idade": 30}
     grupo.append(pessoa)

6. Diferenciando Listas de Dicionários:
   - Em listas aninhadas, os dados são acessados por índices.
     Ex: lista[0][1]

   - Já nos dicionários, os dados são acessados por chave:
     Ex: dicionario["idade"]

7. Por que usar ".items()" em loops:

   - O método ".items()" permite acessar chave e valor ao mesmo tempo, o que facilita a leitura e deixa o código mais limpo.
Ex.: com ".items()":
    for chave, valor in pessoa.items():
        print(f"{chave} = {valor}")

   - Sem ".items()", o "for" percorre apenas as chaves, e é necessário acessar os valores manualmente com "pessoa[chave]".
Ex.:
    for chave in pessoa:
        print(f"{chave} = {pessoa[chave]}")

   - Usar ".items()" evita essa repetição e melhora a clareza do código.

8. Diferença entre lista e dicionário:
   - Lista:
Ex.:
    pessoa = ['Ana', 25] → posição importa.
   - Dicionário:
Ex.:
    pessoa = {
    'nome': 'Ana',
    'idade': 25
}  → a chave define o significado do dado.