Aprendi a trabalhar com listas aninhadas e a manipular dados compostos, como nome e idade juntos em uma mesma estrutura.

1. Listas aninhadas:
   - São listas dentro de listas, usadas para armazenar múltiplos dados relacionados.

   - Exemplo: `pessoas = [["Ana", 20], ["Carlos", 17]]`.

   - Para acessar: `pessoas[0][0]` retorna "Ana". `pessoas[1][1]` retorna 17.

2. Cadastro com listas aninhadas:
   - Criei uma lista chamada `cadastro`.

   - Usei um `for` para pedir o nome e a idade de 4 pessoas.

   - Armazenei os dados em sublistas: `cadastro.append([nome, idade])`.

   - Exibi os dados com: `for pessoa in cadastro: print(f"{pessoa[0]} tem {pessoa[1]} anos.")`

3. Análise dos dados cadastrados:
   - Usei `len(cadastro)` para saber quantas pessoas foram registradas.

   - Verifiquei quem é maior de idade com: `if idade >= 18: print(...)`

   - Calculei a média das idades com: `media = soma / len(cadastro)`

   - Descobri quem tem a maior idade com: `mais_velho = max(idades)` e `indice = idades.index(mais_velho)`

   - Fiz o mesmo para a menor idade com `min()`.

Observações finais:

A estrutura de listas aninhadas facilita o agrupamento de dados relacionados.

   - É importante entender como navegar pelas sublistas com dois índices: [linha][coluna].

   - No exemplo pessoas[1][0], o número 1 indica a segunda pessoa da lista (Carlos), e o 0 indica o primeiro dado dessa pessoa (o nome). Já pessoas[1][1] mostra o segundo dado (a idade).

   - Assim, o primeiro número escolhe qual pessoa, e o segundo número escolhe qual informação dessa pessoa.

